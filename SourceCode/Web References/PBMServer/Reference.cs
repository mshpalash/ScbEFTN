//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EFTN.PBMServer {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AreYouUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleFileDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilePathsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyFolderFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFolderFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPBMDetailDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPBMErrorFileDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::EFTN.Properties.Settings.Default.EFTN_PBMServer_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AreYouUpCompletedEventHandler AreYouUpCompleted;
        
        /// <remarks/>
        public event GetFileListCompletedEventHandler GetFileListCompleted;
        
        /// <remarks/>
        public event GetSingleFileDataCompletedEventHandler GetSingleFileDataCompleted;
        
        /// <remarks/>
        public event GetFilePathsCompletedEventHandler GetFilePathsCompleted;
        
        /// <remarks/>
        public event SaveDocumentCompletedEventHandler SaveDocumentCompleted;
        
        /// <remarks/>
        public event CreateFolderCompletedEventHandler CreateFolderCompleted;
        
        /// <remarks/>
        public event CopyFileCompletedEventHandler CopyFileCompleted;
        
        /// <remarks/>
        public event DeleteFileCompletedEventHandler DeleteFileCompleted;
        
        /// <remarks/>
        public event CopyFolderFilesCompletedEventHandler CopyFolderFilesCompleted;
        
        /// <remarks/>
        public event DeleteFolderFilesCompletedEventHandler DeleteFolderFilesCompleted;
        
        /// <remarks/>
        public event GetPBMDetailDataCompletedEventHandler GetPBMDetailDataCompleted;
        
        /// <remarks/>
        public event GetPBMErrorFileDataCompletedEventHandler GetPBMErrorFileDataCompleted;
        
        /// <remarks/>
        public event GetDBDataCompletedEventHandler GetDBDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AreYouUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AreYouUp() {
            object[] results = this.Invoke("AreYouUp", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AreYouUpAsync() {
            this.AreYouUpAsync(null);
        }
        
        /// <remarks/>
        public void AreYouUpAsync(object userState) {
            if ((this.AreYouUpOperationCompleted == null)) {
                this.AreYouUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAreYouUpOperationCompleted);
            }
            this.InvokeAsync("AreYouUp", new object[0], this.AreYouUpOperationCompleted, userState);
        }
        
        private void OnAreYouUpOperationCompleted(object arg) {
            if ((this.AreYouUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AreYouUpCompleted(this, new AreYouUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFileList(string path, string searchString) {
            object[] results = this.Invoke("GetFileList", new object[] {
                        path,
                        searchString});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileListAsync(string path, string searchString) {
            this.GetFileListAsync(path, searchString, null);
        }
        
        /// <remarks/>
        public void GetFileListAsync(string path, string searchString, object userState) {
            if ((this.GetFileListOperationCompleted == null)) {
                this.GetFileListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileListOperationCompleted);
            }
            this.InvokeAsync("GetFileList", new object[] {
                        path,
                        searchString}, this.GetFileListOperationCompleted, userState);
        }
        
        private void OnGetFileListOperationCompleted(object arg) {
            if ((this.GetFileListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileListCompleted(this, new GetFileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSingleFileData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSingleFileData(string filePath, bool force) {
            object[] results = this.Invoke("GetSingleFileData", new object[] {
                        filePath,
                        force});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSingleFileDataAsync(string filePath, bool force) {
            this.GetSingleFileDataAsync(filePath, force, null);
        }
        
        /// <remarks/>
        public void GetSingleFileDataAsync(string filePath, bool force, object userState) {
            if ((this.GetSingleFileDataOperationCompleted == null)) {
                this.GetSingleFileDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleFileDataOperationCompleted);
            }
            this.InvokeAsync("GetSingleFileData", new object[] {
                        filePath,
                        force}, this.GetSingleFileDataOperationCompleted, userState);
        }
        
        private void OnGetSingleFileDataOperationCompleted(object arg) {
            if ((this.GetSingleFileDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleFileDataCompleted(this, new GetSingleFileDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFilePaths", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFilePaths(string directoryPath, string searchString, bool filter) {
            object[] results = this.Invoke("GetFilePaths", new object[] {
                        directoryPath,
                        searchString,
                        filter});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFilePathsAsync(string directoryPath, string searchString, bool filter) {
            this.GetFilePathsAsync(directoryPath, searchString, filter, null);
        }
        
        /// <remarks/>
        public void GetFilePathsAsync(string directoryPath, string searchString, bool filter, object userState) {
            if ((this.GetFilePathsOperationCompleted == null)) {
                this.GetFilePathsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilePathsOperationCompleted);
            }
            this.InvokeAsync("GetFilePaths", new object[] {
                        directoryPath,
                        searchString,
                        filter}, this.GetFilePathsOperationCompleted, userState);
        }
        
        private void OnGetFilePathsOperationCompleted(object arg) {
            if ((this.GetFilePathsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilePathsCompleted(this, new GetFilePathsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveDocument(string path, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] docData) {
            object[] results = this.Invoke("SaveDocument", new object[] {
                        path,
                        docData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDocumentAsync(string path, byte[] docData) {
            this.SaveDocumentAsync(path, docData, null);
        }
        
        /// <remarks/>
        public void SaveDocumentAsync(string path, byte[] docData, object userState) {
            if ((this.SaveDocumentOperationCompleted == null)) {
                this.SaveDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDocumentOperationCompleted);
            }
            this.InvokeAsync("SaveDocument", new object[] {
                        path,
                        docData}, this.SaveDocumentOperationCompleted, userState);
        }
        
        private void OnSaveDocumentOperationCompleted(object arg) {
            if ((this.SaveDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDocumentCompleted(this, new SaveDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateFolder(string path) {
            this.Invoke("CreateFolder", new object[] {
                        path});
        }
        
        /// <remarks/>
        public void CreateFolderAsync(string path) {
            this.CreateFolderAsync(path, null);
        }
        
        /// <remarks/>
        public void CreateFolderAsync(string path, object userState) {
            if ((this.CreateFolderOperationCompleted == null)) {
                this.CreateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFolderOperationCompleted);
            }
            this.InvokeAsync("CreateFolder", new object[] {
                        path}, this.CreateFolderOperationCompleted, userState);
        }
        
        private void OnCreateFolderOperationCompleted(object arg) {
            if ((this.CreateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CopyFile(string sourceFilePath, string destinationFilePath) {
            this.Invoke("CopyFile", new object[] {
                        sourceFilePath,
                        destinationFilePath});
        }
        
        /// <remarks/>
        public void CopyFileAsync(string sourceFilePath, string destinationFilePath) {
            this.CopyFileAsync(sourceFilePath, destinationFilePath, null);
        }
        
        /// <remarks/>
        public void CopyFileAsync(string sourceFilePath, string destinationFilePath, object userState) {
            if ((this.CopyFileOperationCompleted == null)) {
                this.CopyFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyFileOperationCompleted);
            }
            this.InvokeAsync("CopyFile", new object[] {
                        sourceFilePath,
                        destinationFilePath}, this.CopyFileOperationCompleted, userState);
        }
        
        private void OnCopyFileOperationCompleted(object arg) {
            if ((this.CopyFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFile(string filePath) {
            object[] results = this.Invoke("DeleteFile", new object[] {
                        filePath});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string filePath) {
            this.DeleteFileAsync(filePath, null);
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string filePath, object userState) {
            if ((this.DeleteFileOperationCompleted == null)) {
                this.DeleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileOperationCompleted);
            }
            this.InvokeAsync("DeleteFile", new object[] {
                        filePath}, this.DeleteFileOperationCompleted, userState);
        }
        
        private void OnDeleteFileOperationCompleted(object arg) {
            if ((this.DeleteFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileCompleted(this, new DeleteFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyFolderFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CopyFolderFiles(string sourceFolderPath, string destinationFolderPath, string searchString) {
            this.Invoke("CopyFolderFiles", new object[] {
                        sourceFolderPath,
                        destinationFolderPath,
                        searchString});
        }
        
        /// <remarks/>
        public void CopyFolderFilesAsync(string sourceFolderPath, string destinationFolderPath, string searchString) {
            this.CopyFolderFilesAsync(sourceFolderPath, destinationFolderPath, searchString, null);
        }
        
        /// <remarks/>
        public void CopyFolderFilesAsync(string sourceFolderPath, string destinationFolderPath, string searchString, object userState) {
            if ((this.CopyFolderFilesOperationCompleted == null)) {
                this.CopyFolderFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyFolderFilesOperationCompleted);
            }
            this.InvokeAsync("CopyFolderFiles", new object[] {
                        sourceFolderPath,
                        destinationFolderPath,
                        searchString}, this.CopyFolderFilesOperationCompleted, userState);
        }
        
        private void OnCopyFolderFilesOperationCompleted(object arg) {
            if ((this.CopyFolderFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyFolderFilesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFolderFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFolderFiles(string filepath, string searchstring) {
            this.Invoke("DeleteFolderFiles", new object[] {
                        filepath,
                        searchstring});
        }
        
        /// <remarks/>
        public void DeleteFolderFilesAsync(string filepath, string searchstring) {
            this.DeleteFolderFilesAsync(filepath, searchstring, null);
        }
        
        /// <remarks/>
        public void DeleteFolderFilesAsync(string filepath, string searchstring, object userState) {
            if ((this.DeleteFolderFilesOperationCompleted == null)) {
                this.DeleteFolderFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFolderFilesOperationCompleted);
            }
            this.InvokeAsync("DeleteFolderFiles", new object[] {
                        filepath,
                        searchstring}, this.DeleteFolderFilesOperationCompleted, userState);
        }
        
        private void OnDeleteFolderFilesOperationCompleted(object arg) {
            if ((this.DeleteFolderFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFolderFilesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPBMDetailData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPBMDetailData(string SettlementDate) {
            object[] results = this.Invoke("GetPBMDetailData", new object[] {
                        SettlementDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPBMDetailDataAsync(string SettlementDate) {
            this.GetPBMDetailDataAsync(SettlementDate, null);
        }
        
        /// <remarks/>
        public void GetPBMDetailDataAsync(string SettlementDate, object userState) {
            if ((this.GetPBMDetailDataOperationCompleted == null)) {
                this.GetPBMDetailDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPBMDetailDataOperationCompleted);
            }
            this.InvokeAsync("GetPBMDetailData", new object[] {
                        SettlementDate}, this.GetPBMDetailDataOperationCompleted, userState);
        }
        
        private void OnGetPBMDetailDataOperationCompleted(object arg) {
            if ((this.GetPBMDetailDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPBMDetailDataCompleted(this, new GetPBMDetailDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPBMErrorFileData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPBMErrorFileData() {
            object[] results = this.Invoke("GetPBMErrorFileData", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPBMErrorFileDataAsync() {
            this.GetPBMErrorFileDataAsync(null);
        }
        
        /// <remarks/>
        public void GetPBMErrorFileDataAsync(object userState) {
            if ((this.GetPBMErrorFileDataOperationCompleted == null)) {
                this.GetPBMErrorFileDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPBMErrorFileDataOperationCompleted);
            }
            this.InvokeAsync("GetPBMErrorFileData", new object[0], this.GetPBMErrorFileDataOperationCompleted, userState);
        }
        
        private void OnGetPBMErrorFileDataOperationCompleted(object arg) {
            if ((this.GetPBMErrorFileDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPBMErrorFileDataCompleted(this, new GetPBMErrorFileDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDBData(string command) {
            object[] results = this.Invoke("GetDBData", new object[] {
                        command});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBDataAsync(string command) {
            this.GetDBDataAsync(command, null);
        }
        
        /// <remarks/>
        public void GetDBDataAsync(string command, object userState) {
            if ((this.GetDBDataOperationCompleted == null)) {
                this.GetDBDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBDataOperationCompleted);
            }
            this.InvokeAsync("GetDBData", new object[] {
                        command}, this.GetDBDataOperationCompleted, userState);
        }
        
        private void OnGetDBDataOperationCompleted(object arg) {
            if ((this.GetDBDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBDataCompleted(this, new GetDBDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AreYouUpCompletedEventHandler(object sender, AreYouUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AreYouUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AreYouUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetFileListCompletedEventHandler(object sender, GetFileListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetSingleFileDataCompletedEventHandler(object sender, GetSingleFileDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSingleFileDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSingleFileDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetFilePathsCompletedEventHandler(object sender, GetFilePathsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilePathsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilePathsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SaveDocumentCompletedEventHandler(object sender, SaveDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CreateFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CopyFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteFileCompletedEventHandler(object sender, DeleteFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CopyFolderFilesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteFolderFilesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPBMDetailDataCompletedEventHandler(object sender, GetPBMDetailDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPBMDetailDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPBMDetailDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPBMErrorFileDataCompletedEventHandler(object sender, GetPBMErrorFileDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPBMErrorFileDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPBMErrorFileDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetDBDataCompletedEventHandler(object sender, GetDBDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591